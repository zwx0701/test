C51 COMPILER V9.56.0.0   AD                                                                11/13/2020 17:52:29 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE AD
OBJECT MODULE PLACED IN .\Objects\AD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Scr\AD.c OPTIMIZE(4,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\AD
                    -.lst) OBJECT(.\Objects\AD.obj)

line level    source

   1          /*********************************************************************************************************
             -******
   2          Subroutine:                                                                                                                             AD处理程序
   3          Description:                                                                                                                                                                                                                                            
   4          Input:                                                                                                  
   5          Output:                                                                                         
   6          **********************************************************************************************************
             -*****/
   7          #include <SN8F5702.h>
   8          #include "AD.h"
   9          #include "Ntc.h"
  10          #include "App.h"
  11          #include "Sub.h"        
  12          
  13          //-------------------------------------------------------------
  14          //      AD ram define
  15          //-------------------------------------------------------------
  16          bit F_AD_Updata;                                                                                                                                                //10ms采集AD
  17          idata uint16_t R_AD_Data;                                                                                                               //采集的AD数据
  18          
  19          bit F_Ain_Num;                                                                                                                                                  //当前采集通道
  20          
  21          idata uint16_t R_Vbat_AD;
  22          
  23          idata uint16_t R_VbatFf[8];                                                                                                     //保存每次采集的AD值，用于滑动平均
  24          idata uint8_t R_VbatFf_Wt;
  25          
  26          //=============================================================
  27          //      AD采集程序
  28          //=============================================================
  29          void Mn_AD(void)                
  30          {
  31   1              if(F_AD_Updata)
  32   1              {
  33   2                      F_AD_Updata = 0;
  34   2                      
  35   2                      if(F_Ain_Num == 0)
  36   2                      {
  37   3                              ADM = 0x89;                                                                                                                                             //AIN9,采集电池电压
  38   3                                                                                                                              
  39   3                              Get_AD();                                                                                                                                                       //采集AD值              
  40   3                              
  41   3                              WTAff(&R_VbatFf[R_VbatFf_Wt],&R_VbatFf_Wt,R_AD_Data);   
  42   3                                                                                                                                                                                                                      //保存AD值
  43   3                              R_Vbat_AD = AVERAGE(R_VbatFf);                                                          //求滑动平均    
  44   3      //                      R_Vbat_AD = (R_Vbat_AD * 3);
  45   3      //                      R_Vbat_AD = (R_Vbat_AD >> 1);
  46   3                              
  47   3                              F_Ain_Num = 1;
  48   3                              
  49   3                              VREFH = ((VREFH & 0xFC) | 0x03);                                                        //下一次采集温度用VDD参考
  50   3                      }
  51   2                      else
  52   2                      {
C51 COMPILER V9.56.0.0   AD                                                                11/13/2020 17:52:29 PAGE 2   

  53   3                              ADM = 0x83;                                                                                                                                             //AIN3,采集温度         
  54   3                                                                                                                      
  55   3                              Get_AD();                                                                                                                                                       //采集AD值                                                                              
  56   3                              WTAff(&R_NtcFf[R_NtcFf_Wt],&R_NtcFf_Wt,R_AD_Data);      
  57   3                                                                                                                                                                                                                      //保存AD值
  58   3                              R_Ntc_AD = AVERAGE(R_NtcFf);                                                                    //求滑动平均                                                    
  59   3                              F_Ntc_Updata = 1;                                                                                                                       //采集完温度    
  60   3      
  61   3                              F_Ain_Num = 0;
  62   3                              
  63   3                              VREFH = (VREFH & 0xFC);                                                                                         //下一次采集电压用内部2V参考
  64   3                      }
  65   2              }
  66   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     21    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
