C51 COMPILER V9.56.0.0   INTGND                                                            11/13/2020 10:16:17 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE INTGND
OBJECT MODULE PLACED IN .\Objects\IntGnd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Scr\IntGnd.c OPTIMIZE(4,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\IntGnd.lst) OBJECT(.\Objects\IntGnd.obj)

line level    source

   1          /*********************************************************************************************************
   2          Subroutine:                                                                                             定时程序
   3          Description:                                   
   4          Input:                                          
   5          Output:                                        
   6          **********************************************************************************************************
             -/
   7          #include <SN8F5702.h>   
   8          #include "IntGnd.h"
   9          #include "InChk.h"
  10          #include "App.h"
  11          #include "Data.h"
  12          #include "AD.h" 
  13          #include "Ntc.h"
  14          #include "UART.h"       
  15          //-------------------------------------------------------------
  16          //      time ram define
  17          //-------------------------------------------------------------                                                                                                                                 
  18          bit F_5Ms;                                                                                                                                      //5ms时间溢出标志                                                                                                               
  19          
  20          //=============================================================
  21          //      定时程序
  22          //=============================================================
  23          void Mn_IntGnd(void)
  24          {
  25   1              if(F_5Ms)                                                                                                                                       //5ms时间到
  26   1              {
  27   2                      F_5Ms = 0;
  28   2                      ClearUTXIO();
  29   2                      cRxTick++;              
  30   2                      if(cRxTick >21)
  31   2                              cRxTick = 21;
  32   2                      if(RTm_Key !=0)
  33   2                      {
  34   3                              RTm_Key--;
  35   3                              if(RTm_Key == 0)
  36   3                              {
  37   4                                      O_KEY = 1;
  38   4                              }
  39   3                      }
  40   2                      F_AD_Updata = 1;                                                                                                //5ms采集一次AD值
  41   2                      
  42   2                      Tm_Sys_Slp();                                                                                                           //系统睡眠定时
  43   2                      Tm_Delay_Slp();                                                                                                 //MCU延时进入睡眠
  44   2                      
  45   2                      Tm_Chk_Chg();                                                                                                           //检测充电信号消抖
  46   2                      Tm_Chk_DisChg();                                                                                                //检测放电信号消抖              
  47   2                      MINKey_Intgnd();                
  48   2              }
  49   1      }
  50          /****************************************************************************
  51          * Function                : Tm_Sys_Slp
  52          * Description           : 系统睡眠定时  
  53          * Input                                 : RTm_Sys_Slp                             
C51 COMPILER V9.56.0.0   INTGND                                                            11/13/2020 10:16:17 PAGE 2   

  54          * Output                                : RTm_Sys_Slp
  55          ****************************************************************************/
  56          void Tm_Sys_Slp(void)
  57          {
  58   1              if(RTm_Sys_Slp > 0)
  59   1              {
  60   2                      RTm_Sys_Slp--;
  61   2                      if(RTm_Sys_Slp == 0)    
  62   2                      {
  63   3                              F_Key_Push = 1;                                                                                         //进入睡眠
  64   3                              R_Sys_Mode = 1;                                                                                         
  65   3                      }
  66   2              }
  67   1      }
  68          /****************************************************************************
  69          * Function                : Tm_Sys_Slp
  70          * Description           : 系统延时进入睡眠定时  
  71          * Input                                 : RTm_Sys_Slp                             
  72          * Output                                : RTm_Sys_Slp
  73          ****************************************************************************/
  74          void Tm_Delay_Slp(void)
  75          {
  76   1              if(RTm_Delay_Slp > 0)
  77   1              {
  78   2                      RTm_Delay_Slp--;
  79   2                      if(RTm_Delay_Slp == 0)  
  80   2                      {
  81   3                              if((F_UartRx_En == 0) && (F_UartTx_En == 0))    
  82   3                              {
  83   4                                      if((F_Chg_Exist == 0) && (F_DisChg_Exist == 0))
  84   4                                      {
  85   5                                              RTm_Sys_Slp = LTm_Sys_Slp;                              //重新开始睡眠定时
  86   5                                      }                                       
  87   4                              }                                                                                                                               
  88   3                      }
  89   2              }
  90   1      }
  91          /****************************************************************************
  92          * Function                : Tm_Chk_Chg
  93          * Description           : 充电信号检测消抖
  94          * Input                                 : RTm_Chk_Chg                                     
  95          * Output                                : RTm_Chk_Chg
  96          ****************************************************************************/
  97          void Tm_Chk_Chg(void)
  98          {
  99   1              if(RTm_Chk_Chg > 0)
 100   1              {
 101   2                      RTm_Chk_Chg--;
 102   2                      if(RTm_Chk_Chg == 0)
 103   2                      {                               
 104   3                              F_Key_Push = 0;                                                                                 
 105   3                              R_Sys_Mode = 0;                                         
 106   3                              RTm_Sys_Slp = 0;                                                                                        //不进入睡眠    
 107   3                              RTm_Delay_Slp = 0;
 108   3                              
 109   3                              if(F_Chk_Chg)
 110   3                              {
 111   4                                      F_Chg_Exist = 1;                                                                                //充电                          
 112   4                                                                                                      
 113   4                                      F_Charge_Ok = 1;
 114   4      
 115   4                                      O_Chg_DisChg_En = 0;                                                            //开充电
C51 COMPILER V9.56.0.0   INTGND                                                            11/13/2020 10:16:17 PAGE 3   

 116   4                                      
 117   4                                      if(R_Rt_Temp <= 125)//全速充电
 118   4                                      {
 119   5                                              O_Chg_Half_En = 0;                                                              //关半速充电    
 120   5                                              O_Chg_DisChg_En = 0;
 121   5                                      }
 122   4                                      else//半速充电
 123   4                                      {
 124   5                                              O_Chg_Half_En = 1;                                                              //开半速充电    
 125   5                                              O_Chg_DisChg_En = 0;                                    
 126   5                                      }                                       
 127   4                              }
 128   3                              else
 129   3                              {
 130   4                                      F_Chg_Exist = 0;                                                                                //充电拔掉
 131   4                                      
 132   4                                      O_Chg_Half_En = 0;                                                                      //关断半速充电                                  
 133   4      
 134   4                                      if(F_DisChg_Exist == 0)                                                         
 135   4                                      {
 136   5      //                                      O_Chg_DisChg_En = 1;                                                    //关充电        
 137   5                                              
 138   5                                              if((F_UartRx_En == 0) && (F_UartTx_En == 0))    
 139   5                                              {
 140   6                                                      RTm_Sys_Slp = LTm_Sys_Slp;                      //重新开始睡眠定时
 141   6                                              }                                       
 142   5                                      }                                       
 143   4                              }
 144   3                      }
 145   2              }
 146   1      }
 147          /****************************************************************************
 148          * Function                : Tm_Chk_DisChg
 149          * Description           : 放电信号检测消抖
 150          * Input                                 : RTm_Chk_DisChg                                  
 151          * Output                                : RTm_Chk_DisChg
 152          ****************************************************************************/
 153          void Tm_Chk_DisChg(void)
 154          {
 155   1              if(RTm_Chk_DisChg !=0)
 156   1                      RTm_Chk_DisChg--;       
 157   1              if(RTm_Chk_NDisChg <LTm_Chk_NDisChg)
 158   1                      RTm_Chk_NDisChg++;
 159   1      }
 160          /****************************************************************************
 161          * Function                : Tm_Uart_Reset
 162          * Description           : 20MS未收到数据，复位UART
 163          * Input                                 : RTm_Uart_Reset                                  
 164          * Output                                : RTm_Uart_Reset
 165          ****************************************************************************/
 166          //void Tm_Uart_Reset(void)
 167          //{
 168          //      if(RTm_Uart_Reset > 0)
 169          //      {
 170          //              RTm_Uart_Reset--;
 171          //              if(RTm_Uart_Reset == 0) 
 172          //              {
 173          //                      F_Uart_Rx = 0;
 174          
 175          //                      F_UartRx_En = 0;                                                                                        //关UART接收
 176          //                      F_UartRx_Stop = 0;
 177          //                      R_UartRx_Bit = 8;                                                                                       //8bit不带校验位        
C51 COMPILER V9.56.0.0   INTGND                                                            11/13/2020 10:16:17 PAGE 4   

 178          //                      R_UartRx_Byte = 0;
 179          //              
 180          //                      TR0 = 0;                                                                        //Disable T0 timer function
 181          //                      IEN0 |= 0x01;                                                                           //INT0 isr enable (EX0) 
 182          
 183          //                      Uart_TxM_IN;
 184          //                      
 185          //                      if((F_Chg_Exist == 0) && (F_DisChg_Exist == 0))
 186          //                      {
 187          //                              RTm_Sys_Slp = LTm_Sys_Slp;                                      //开始睡眠定时  
 188          //                      }                               
 189          //              }
 190          //      }
 191          //}
 192          /****************************************************************************
 193          * Function                : Tm_Rt_Chat
 194          * Description           : 温度在1度跳动时5S变化一次
 195          * Input                                 : RTm_Rt_Chat                             
 196          * Output                                : RTm_Rt_Chat
 197          ****************************************************************************/
 198          //void Tm_Rt_Chat(void)
 199          //{
 200          //      if(RTm_Rt_Chat > 0)
 201          //      {
 202          //              RTm_Rt_Chat--;                                                  
 203          //      }
 204          //}
 205          //-----------------------------------------------------------------------------
 206          //  Timer2 ISR
 207          //-----------------------------------------------------------------------------
 208          void Timer2_ISR(void) interrupt ISRTimer2       //Vector @  0x2B
 209          {
 210   1              if(TF2 == 1)                                                                                                                    //必须软件判断和清零T2中断标志位
 211   1              {
 212   2                      TF2 = 0;                                                                                //Clear Timer2 overflow flag 
 213   2                                                                                      
 214   2                      F_5Ms = 1;                                                                                                                      //定时5ms               
 215   2              }      
 216   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    204    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
